'''
이것이 코딩테스트다
실전문제 3-2 큰 수의 법칙
동빈이의 큰 수의 법칙이란 다양한 수로 이뤄진 배열이 있을 때 주어진 수들을 M번 더해 가장 큰 수를 만드는 법칙
단, 배열의 특정한 인덱스(번호)에 해당하는 수가 연속해서 K번을 초과할 수는 없다.
배열의 크기 N, 숫자가 더해지는 횟수 M, 그리고 K가 주어질 때 동빈이의 큰 수의 법칙에 따른 결과를 출력하시오.
'''

'''
입력조건
 * 첫째 줄에 N(2<=N<=1,000), M(1<=M<=10,000), K(1<=K<=10,000)의 자연수가 주어지며, 각 자연수는 공백으로 구분한다.
 * 둘째 줄에 N개의 자연수가 주어진다. 각 자연수는 공백으로 구분한다. 단, 각각의 자연수는 1이상 10,000이하의 수로 주어진다.
 * 입력으로 주어지는 K는 항상 M보다 작거나 같다.
출력조건
 * 첫째 줄에 동빈이의 큰 수의 법칙에 따라 더해진 답을 출력한다.
'''
# N, M, K를 공백으로 구분하여 입력받기
n, m, k = map(int, input().split())
# N개의 수를 공백으로 구분하여 입력받기
array = list(map(int, input().split()))

array.sort()
first = array[n-1]  # 가장 큰 수
second = array[n-2] # 두 번째로 큰 수

# 가장 큰 수가 더해지는 횟수 계산
count = int(m / (k + 1) * k)    # k+1 : 반복되는 수열의 길이
count += m % (k + 1)    # m이 k+1로 나누어떨어지지 않는 경우

sum = 0
sum += (count) * first #가장 큰 수 더하기
sum += (m - count) * second # 두 번쩨로 큰 수 더하기 
print(sum)
